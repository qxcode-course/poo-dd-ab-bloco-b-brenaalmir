{
    "patches": [
        {
            "label": "2025-10-26_20-35-26",
            "content": "@@ -74,16 +74,21 @@\n pacidade\n+: int\n  = capac\n@@ -113,16 +113,21 @@\n .__carga\n+: int\n  = capac\n@@ -359,382 +359,40 @@\n def \n-usar(self, tempo: int):%0A        if tempo %3E self.__carga:%0A            tempo_usado = self.__carga%0A            self.__carga = 0%0A            return tempo_usado, True%0A        else:%0A            self.__carga -= tempo%0A            return tempo, False%0A%0A    def carregar(self, quantidade: int):%0A        self.setCarga(self.__carga + quantidade)%0A%0A    def __str__(self):%0A        return \n+mostrar(self):%0A        print(\n f%22\n+(\n %7Bsel\n@@ -421,17 +421,19 @@\n acidade%7D\n-%22\n+)%22)\n %0A%0A%0Aclass\n@@ -507,16 +507,21 @@\n potencia\n+: int\n  = poten\n@@ -596,15 +596,15 @@\n def \n-__str__\n+mostrar\n (sel\n@@ -619,17 +619,26 @@\n     \n-return f%22\n+print(f%22(Pot%C3%AAncia \n %7Bsel\n@@ -654,10 +654,11 @@\n cia%7D\n-W%22\n+)%22)\n %0A%0A%0Ac\n@@ -709,32 +709,38 @@\n    self.__ligado\n+: bool\n  = False%0A       \n@@ -746,32 +746,48 @@\n   self.__bateria\n+: Bateria %7C None\n  = None%0A        \n@@ -807,44 +807,34 @@\n ador\n- = None%0A        self.__tempo_uso = 0\n+: Carregador %7C None = None\n %0A%0A  \n@@ -839,20 +839,23 @@\n     def \n-show\n+mostrar\n (self):%0A\n@@ -866,78 +866,50 @@\n     \n-msg = %22Notebook: %22%0A        if not self.__ligado:%0A            msg += %22d\n+status = %22Ligado%22 if self.__ligado else %22D\n esli\n@@ -926,269 +926,146 @@\n     \n-else:%0A            msg += f%22ligado por %7Bself.__tempo_uso%7D min%22%0A%0A        if self.__bateria and self.__carregador:%0A            msg += f%22, Carregador %7Bself.__carregador%7D, Bateria %7Bself.__bateria%7D%22%0A        elif self.__bateria:%0A            msg += f%22, Bater\n+bat = f%22(%7Bself.__bateria.getCarga()%7D/%7Bself.__bateria.getCapacidade()%7D)%22 if self.__bateria else %22Nenhuma%22%0A        car = f%22(Pot%C3%AAnc\n ia\n- \n %7Bself.__\n bate\n@@ -1064,71 +1064,125 @@\n f.__\n-bateria%7D%22%0A        elif self.__carregador:%0A            msg += f%22\n+carregador.getPotencia()%7D)%22 if self.__carregador else %22Desconectado%22%0A        print(f%22Status: %7Bstatus%7D, Bateria: %7Bbat%7D\n , Ca\n@@ -1193,48 +1193,16 @@\n ador\n+:\n  %7B\n-self.__carregador%7D%22%0A%0A        print(msg\n+car%7D%22\n )%0A%0A \n@@ -1212,15 +1212,13 @@\n def \n-turn_on\n+ligar\n (sel\n@@ -1338,16 +1338,54 @@\n  = True%0A\n+            print(%22notebook ligado%22)%0A%0A\n         \n@@ -1413,15 +1413,8 @@\n nt(%22\n-fail:  \n n%C3%A3o \n@@ -1447,16 +1447,16 @@\n def \n-turn_off\n+desligar\n (sel\n@@ -1459,32 +1459,35 @@\n (self):%0A        \n+if \n self.__ligado = \n@@ -1487,70 +1487,22 @@\n gado\n- = False%0A%0A    def set_battery(self, capacidade: int):%0A\n+:%0A    \n         \n if s\n@@ -1501,2469 +1501,1763 @@\n     \n-if \n self.__\n-bateria:%0A            print(%22fail: bateria j%C3%A1 conectada%22)%0A            return%0A        self.__bateria = Bateria(capacidade)%0A%0A    def rm_battery(self):%0A        if not self.__bateria:%0A            print(%22fail: Sem bateria%22)%0A            return%0A        print(f%22Removido %7Bself.__bateria%7D%22)%0A        self.__bateria = None%0A        if not self.__carregador:%0A            self.__ligado = False%0A%0A    def set_charger(self, potencia: int):%0A        if self.__carregador:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.__carregador = Carregador(potencia)%0A%0A    def rm_charger(self):%0A        if not self.__carregador:%0A            print(%22fail: Sem carregador%22)%0A            return%0A        print(f%22Removido %7Bself.__carregador%7D%22)%0A        self.__carregador = None%0A        if not (self.__bateria and self.__bateria.getCarga() %3E 0):%0A            self.__ligado = False%0A%0A    def use(self, tempo: int):%0A        if not self.__ligado:%0A            print(%22fail: desligado%22)%0A            return%0A%0A        if self.__carregador and not self.__bateria:%0A            self.__tempo_uso += tempo%0A            return%0A%0A        if self.__bateria and not self.__carregador:%0A            usado, descarregou = self.__bateria.usar(tempo)%0A            self.__tempo_uso += usado%0A            if descarregou:%0A                print(%22fail: descarregou%22)%0A                self.__ligado = False%0A            return%0A%0A        if self.__bateria and self.__carregador:%0A            ganho = (self.__carregador.getPotencia() - 1) * tempo%0A            self.__bateria.carregar(ganho)%0A            self.__tempo_uso += tempo%0A            return%0A%0A%0Adef main():%0A    nb = Notebook()%0A    while True:%0A        line = input().strip()%0A        if not line:%0A            continue%0A        print(f%22$%7Bline%7D%22)%0A        args = line.split()%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22show%22:%0A            nb.show()%0A        elif args%5B0%5D == %22turnOn%22:%0A            nb.turnOn()%0A        elif  args%5B0%5D == %22turnOff%22:%0A            nb.turnOff()%0A        elif args%5B0%5D == %22setBattery%22:%0A            nb.setBattery(int(args%5B1%5D))%0A        elif args%5B0%5D == %22removeBattery%22:%0A            nb.removeBattery()%0A        elif args%5B0%5D == %22setCharger%22:%0A            nb.setCharger(int(args%5B1%5D))%0A        elif args%5B0%5D == %22removeCharger%22:%0A            nb.removeCharger()%0A        elif args%5B0%5D == %22use%22:%0A            nb.use(int(arg%5B1%5D))%0A        else:%0A            print(%22fail: invalid command%22)%0A%0Aif __name__ == %22__main__%22:%0A    main()\n+ligado = False%0A            print(%22notebook desligado%22)%0A%0A    def usar(self, tempo: int):%0A        if not self.__ligado:%0A            print(%22notebook desligado%22)%0A            return%0A%0A        if not self.__bateria and not self.__carregador:%0A            print(%22erro: sem bateria e sem carregador%22)%0A            self.__ligado = False%0A            return %0A%0A        if self.__bateria is None:%0A            print(%22Notebook utilizado com sucesso (carregador apenas)%22)%0A            return%0A%0A        carga = self.__bateria.getCarga()%0A%0A        if self.__carregador is None:%0A            if carga == 0:%0A                print(%22notebook descarregado%22)%0A                self.__ligado = False%0A                return%0A            if tempo %3E carga:%0A                print(f%22Usando por %7Bcarga%7D minutos, notebook descarregou%22)%0A                self.__bateria.setCarga(0)%0A                self.__ligado = False%0A            else:%0A                print(f%22Usando por %7Btempo%7D minutos%22)%0A                self.__bateria.setCarga(carga - tempo)%0A        %0A        else:%0A            potencia = self.__carregador.getPotencia()%0A            nova_carga = carga - tempo + tempo * potencia%0A            self.__bateria.setCarga(nova_carga)%0A            print(%22Notebook utilizado com sucesso%22)%0A%0A    def setBateria(self, bateria: Bateria):%0A        self.__bateria = bateria%0A%0A    def rmBateria(self):%0A        if self.__bateria:%0A            print(%22bateria removida%22)%0A        b = self.__bateria%0A        self.__bateria = None%0A        return b%0A%0A    def setCarregador(self, carregador: Carregador):%0A        self.__carregador = carregador%0A%0A    def rmCarregador(self):%0A        if self.__carregador:%0A            print(%22carregador removido%22)%0A        c = self.__carregador%0A        self.__carregador = None%0A        return c\n",
            "lines": "108"
        },
        {
            "label": "2025-10-26_22-25-37",
            "content": "@@ -1067,24 +1067,8 @@\n eria\n-: Bateria %7C None\n  = N\n@@ -1100,27 +1100,8 @@\n ador\n-: Carregador %7C None\n  = N\n@@ -2937,32 +2937,89 @@\n         return%0A%0A\n+        if self.__carregador and not self.__bateria:%0A    \n         self.__t\n@@ -3035,16 +3035,35 @@\n += tempo\n+%0A            return\n %0A%0A      \n@@ -3169,16 +3169,54 @@\n (tempo)%0A\n+            self.__tempo_uso += usado%0A\n         \n@@ -3510,68 +3510,33 @@\n     \n-return%0A%0A        if not self.__bateria and self.__carregador:\n+self.__tempo_uso += tempo\n %0A   \n@@ -3708,19 +3708,20 @@\n         \n-cmd\n+args\n  = line.\n@@ -3731,30 +3731,8 @@\n it()\n-%0A        args = cmd%5B0%5D\n %0A%0A  \n",
            "lines": "159"
        },
        {
            "label": "2025-10-26_22-35-14",
            "content": "@@ -1,4357 +1,982 @@\n-class Bateria:%0A    def __init__(self, capacidade: int):%0A        self.__capacidade = capacidade%0A        self.__carga = capacidade%0A%0A    def getCapacidade(self):%0A        return self.__capacidade%0A%0A    def getCarga(self):%0A        return self.__carga%0A%0A    def setCarga(self, valor: int):%0A        self.__carga = max(0, min(valor, self.__capacidade))%0A%0A    def usar(self, tempo: int):%0A        if tempo %3E self.__carga:%0A            tempo_usado = self.__carga%0A            self.__carga = 0%0A            return tempo_usado, True%0A        else:%0A            self.__carga -= tempo%0A            return tempo, False%0A%0A    def carregar(self, quantidade: int):%0A        self.setCarga(self.__carga + quantidade)%0A%0A    def __str__(self):%0A        return f%22%7Bself.__carga%7D/%7Bself.__capacidade%7D%22%0A%0A%0Aclass Carregador:%0A    def __init__(self, potencia: int):%0A        self.__potencia = potencia%0A%0A    def getPotencia(self):%0A        return self.__potencia%0A%0A    def __str__(self):%0A        return f%22%7Bself.__potencia%7DW%22%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.__ligado = False%0A        self.__bateria: Bateria %7C None = None%0A        self.__carregador: Carregador %7C None = None%0A        self.__tempo_uso = 0%0A%0A    def show(self):%0A        msg = %22Notebook: %22%0A        if not self.__ligado:%0A            msg += %22desligado%22%0A        else:%0A            msg += f%22ligado por %7Bself.__tempo_uso%7D min%22%0A%0A        if self.__bateria and self.__carregador:%0A            msg += f%22, Carregador %7Bself.__carregador%7D, Bateria %7Bself.__bateria%7D%22%0A        elif self.__bateria:%0A            msg += f%22, Bateria %7Bself.__bateria%7D%22%0A        elif self.__carregador:%0A            msg += f%22, Carregador %7Bself.__carregador%7D%22%0A%0A        print(msg)%0A%0A    def turn_on(self):%0A        if (self.__bateria and self.__bateria.getCarga() %3E 0) or self.__carregador:%0A            self.__ligado = True%0A        else:%0A            print(%22fail:  n%C3%A3o foi poss%C3%ADvel ligar%22)%0A%0A    def turn_off(self):%0A        self.__ligado = False%0A%0A    def set_battery(self, capacidade: int):%0A        if self.__bateria:%0A            print(%22fail: bateria j%C3%A1 conectada%22)%0A            return%0A        self.__bateria = Bateria(capacidade)%0A%0A    def rm_battery(self):%0A        if not self.__bateria:%0A            print(%22fail: Sem bateria%22)%0A            return%0A        print(f%22Removido %7Bself.__bateria%7D%22)%0A        self.__bateria = None%0A        if not self.__carregador:%0A            self.__ligado = False%0A%0A    def set_charger(self, potencia: int):%0A        if self.__carregador:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.__carregador = Carregador(potencia)%0A%0A    def rm_charger(self):%0A        if not self.__carregador:%0A            print(%22fail: Sem carregador%22)%0A            return%0A        print(f%22Removido %7Bself.__carregador%7D%22)%0A        self.__carregador = None%0A        if not (self.__bateria and self.__bateria.getCarga() %3E 0):%0A            self.__ligado = False%0A%0A    def use(self, tempo: int):%0A        if not self.__ligado:%0A            print(%22fail: desligado%22)%0A            return%0A%0A        self.__tempo_uso += tempo%0A%0A        if self.__bateria and not self.__carregador:%0A            usado, descarregou = self.__bateria.usar(tempo)%0A            if descarregou:%0A                print(%22fail: descarregou%22)%0A                self.__ligado = False%0A            return%0A%0A        if self.__bateria and self.__carregador:%0A            ganho = (self.__carregador.getPotencia() - 1) * tempo%0A            self.__bateria.carregar(ganho)%0A            return%0A%0A        if not self.__bateria and self.__carregador:%0A            return%0A%0A%0Adef main():%0A    nb = Notebook()%0A    while True:%0A        line = input().strip()%0A        if not line:%0A            continue%0A        print(f%22$%7Bline%7D%22)%0A        args = line.split()%0A        cmd = args%5B0%5D%0A%0A        if cmd == %22end%22:%0A            break%0A        elif cmd == %22show%22:%0A            nb.show()%0A        elif cmd == %22turnOn%22:%0A            nb.turnOn()%0A        elif  cmd == %22turnOff%22:%0A            nb.turnOff()%0A        elif cmd == %22setBattery%22:%0A            nb.setBattery(int(args%5B1%5D))%0A        elif cmd == %22removeBattery%22:%0A            nb.removeBattery()%0A        elif cmd == %22setCharger%22:%0A            nb.setCharger(int(args%5B1%5D))%0A        elif cmd == %22removeCharger%22:%0A            nb.removeCharger()%0A        elif cmd == %22use%22:%0A            nb.use(int(args%5B1%5D))%0A        else:%0A            print(%22fail: invalid command%22)%0A%0Aif __name__ == %22__main__%22:%0A    main()\n+@@ -3664,20 +3664,19 @@%0A         %0A-args%0A+cmd%0A  = line.%0A@@ -3695,18 +3695,18 @@%0A     %0A-cmd = args%0A+args = cmd%0A %255B0%255D%250A%0A@@ -3717,19 +3717,20 @@%0A      if %0A-cmd%0A+args%0A %255B0%255D == %2522%0A@@ -3758,35 +3758,36 @@%0A ak%250A        elif %0A-cmd%0A+args%0A %255B0%255D == %2522show%2522:%250A %0A@@ -3812,35 +3812,36 @@%0A ()%250A        elif %0A-cmd%0A+args%0A %255B0%255D == %2522turnOn%2522:%0A@@ -3879,19 +3879,20 @@%0A   elif  %0A-cmd%0A+args%0A %255B0%255D == %2522%0A@@ -3931,35 +3931,36 @@%0A ()%250A        elif %0A-cmd%0A+args%0A %255B0%255D == %2522setBatte%0A@@ -3990,27 +3990,28 @@%0A Battery(int(%0A-cmd%0A+args%0A %255B1%255D))%250A      %0A@@ -4009,35 +4009,36 @@%0A ))%250A        elif %0A-cmd%0A+args%0A %255B0%255D == %2522removeBa%0A@@ -4081,35 +4081,36 @@%0A ()%250A        elif %0A-cmd%0A+args%0A %255B0%255D == %2522setCharg%0A@@ -4140,27 +4140,28 @@%0A Charger(int(%0A-cmd%0A+args%0A %255B1%255D))%250A      %0A@@ -4159,35 +4159,36 @@%0A ))%250A        elif %0A-cmd%0A+args%0A %255B0%255D == %2522removeCh%0A@@ -4239,19 +4239,20 @@%0A    elif %0A-cmd%0A+args%0A %255B0%255D == %2522%0A@@ -4280,19 +4280,19 @@%0A use(int(%0A-cmd%0A+arg%0A %255B1%255D))%250A  %0A\n",
            "lines": "70"
        },
        {
            "label": "2025-10-26_22-41-09",
            "content": "@@ -410,24 +410,30 @@\n             \n+tempo_\n usado = self\n@@ -441,16 +441,16 @@\n __carga%0A\n-\n         \n@@ -489,16 +489,22 @@\n  return \n+tempo_\n usado, T\n@@ -1842,16 +1842,17 @@\n t(%22fail:\n+ \n  n%C3%A3o foi\n@@ -3322,24 +3322,25 @@\n     ganho = \n+(\n self.__carre\n@@ -3363,17 +3363,14 @@\n a() \n-* tempo -\n+- 1) *\n  tem\n@@ -4297,25 +4297,24 @@\n ail:\n- comando\n  inv\n-%C3%A1lido\n+alid command\n %22)%0A%0A\n",
            "lines": "159"
        },
        {
            "label": "2025-10-26_22-48-26",
            "content": "@@ -3814,18 +3814,17 @@\n == %22turn\n-_o\n+O\n n%22:%0A    \n@@ -3838,18 +3838,17 @@\n  nb.turn\n-_o\n+O\n n()%0A    \n",
            "lines": "159"
        },
        {
            "label": "2025-10-26_22-49-37",
            "content": "@@ -3871,18 +3871,17 @@\n == %22turn\n-_o\n+O\n ff%22:%0A   \n@@ -3896,18 +3896,17 @@\n  nb.turn\n-_o\n+O\n ff()%0A   \n@@ -3926,18 +3926,17 @@\n  == %22set\n-_b\n+B\n attery%22:\n@@ -3954,18 +3954,17 @@\n   nb.set\n-_b\n+B\n attery(i\n@@ -3999,26 +3999,25 @@\n d == %22remove\n-_b\n+B\n attery%22:%0A   \n@@ -4034,18 +4034,17 @@\n b.remove\n-_b\n+B\n attery()\n@@ -4068,18 +4068,17 @@\n  == %22set\n-_c\n+C\n harger%22:\n@@ -4096,18 +4096,17 @@\n   nb.set\n-_c\n+C\n harger(i\n@@ -4141,26 +4141,25 @@\n d == %22remove\n-_c\n+C\n harger%22:%0A   \n@@ -4176,18 +4176,17 @@\n b.remove\n-_c\n+C\n harger()\n",
            "lines": "159"
        },
        {
            "label": "2025-10-26_22-55-15",
            "content": "@@ -4002,17 +4002,21 @@\n md == %22r\n-m\n+emove\n _battery\n@@ -4034,17 +4034,21 @@\n     nb.r\n-m\n+emove\n _battery\n@@ -4148,17 +4148,21 @@\n md == %22r\n-m\n+emove\n _charger\n@@ -4180,17 +4180,21 @@\n     nb.r\n-m\n+emove\n _charger\n",
            "lines": "159"
        },
        {
            "label": "2025-10-26_22-58-58",
            "content": "@@ -2959,32 +2959,67 @@\n         return%0A%0A\n+        self.__tempo_uso += tempo%0A%0A\n         if self.\n@@ -3047,32 +3047,32 @@\n f.__carregador:%0A\n-\n             usad\n@@ -3119,46 +3119,8 @@\n po)%0A\n-            self.__tempo_uso += usado%0A\n     \n@@ -3297,46 +3297,8 @@\n or:%0A\n-            self.__tempo_uso += tempo%0A\n     \n@@ -3416,32 +3416,32 @@\n         return%0A%0A\n+\n         if not s\n@@ -3481,46 +3481,8 @@\n or:%0A\n-            self.__tempo_uso += tempo%0A\n     \n",
            "lines": "159"
        },
        {
            "label": "2025-10-26_23-03-27",
            "content": "@@ -498,50 +498,8 @@\n True\n-  # retorna o tempo usado e se descarregou\n %0A   \n@@ -2971,40 +2971,8 @@\n rn%0A%0A\n-        # Caso s%C3%B3 tenha bateria%0A\n     \n@@ -3121,47 +3121,8 @@\n sado\n-  # s%C3%B3 adiciona o tempo realmente usado\n %0A   \n@@ -3251,50 +3251,8 @@\n rn%0A%0A\n-        # Caso tenha bateria e carregador%0A\n     \n@@ -3469,43 +3469,8 @@\n rn%0A%0A\n-        # Caso s%C3%B3 tenha carregador%0A\n     \n@@ -3929,32 +3929,33 @@\n ()%0A        elif \n+ \n cmd == %22turn_off\n@@ -4378,17 +4378,16 @@\n lido%22)%0A%0A\n-%0A\n if __nam\n",
            "lines": "160"
        },
        {
            "label": "2025-10-26_23-07-42",
            "content": "@@ -490,24 +490,66 @@\n  usado, True\n+  # retorna o tempo usado e se descarregou\n %0A        els\n@@ -3001,32 +3001,64 @@\n         return%0A%0A\n+        # Caso s%C3%B3 tenha bateria%0A\n         if self.\n@@ -3191,16 +3191,55 @@\n += usado\n+  # s%C3%B3 adiciona o tempo realmente usado\n %0A       \n@@ -3352,32 +3352,74 @@\n         return%0A%0A\n+        # Caso tenha bateria e carregador%0A\n         if self.\n@@ -3612,32 +3612,67 @@\n         return%0A%0A\n+        # Caso s%C3%B3 tenha carregador%0A\n         if not s\n@@ -4127,17 +4127,16 @@\n    elif \n- \n cmd == %22\n@@ -4567,16 +4567,17 @@\n lido%22)%0A%0A\n+%0A\n if __nam\n",
            "lines": "164"
        },
        {
            "label": "2025-10-26_23-08-10",
            "content": "@@ -2971,37 +2971,8 @@\n rn%0A%0A\n-        # Uso s%C3%B3 com bateria%0A\n     \n@@ -3012,32 +3012,32 @@\n f.__carregador:%0A\n+\n             usad\n@@ -3251,47 +3251,8 @@\n rn%0A%0A\n-        # Uso com bateria + carregador%0A\n     \n@@ -3469,40 +3469,8 @@\n rn%0A%0A\n-        # Uso s%C3%B3 com carregador%0A\n     \n@@ -3929,32 +3929,33 @@\n ()%0A        elif \n+ \n cmd == %22turn_off\n@@ -4378,17 +4378,16 @@\n lido%22)%0A%0A\n-%0A\n if __nam\n@@ -4405,16 +4405,16 @@\n ain__%22:%0A\n+\n     main\n@@ -4415,9 +4415,8 @@\n   main()\n-%0A\n",
            "lines": "160"
        },
        {
            "label": "2025-10-26_23-09-29",
            "content": "@@ -2959,32 +2959,61 @@\n         return%0A%0A\n+        # Uso s%C3%B3 com bateria%0A\n         if self.\n@@ -3041,32 +3041,32 @@\n f.__carregador:%0A\n-\n             usad\n@@ -3268,32 +3268,71 @@\n         return%0A%0A\n+        # Uso com bateria + carregador%0A\n         if self.\n@@ -3525,32 +3525,64 @@\n         return%0A%0A\n+        # Uso s%C3%B3 com carregador%0A\n         if not s\n@@ -4037,17 +4037,16 @@\n    elif \n- \n cmd == %22\n@@ -4477,16 +4477,17 @@\n lido%22)%0A%0A\n+%0A\n if __nam\n@@ -4505,16 +4505,16 @@\n ain__%22:%0A\n-\n     main\n@@ -4511,12 +4511,13 @@\n :%0A    main()\n+%0A\n",
            "lines": "164"
        },
        {
            "label": "2025-10-26_23-09-44",
            "content": "@@ -2971,37 +2971,8 @@\n rn%0A%0A\n-        # Uso s%C3%B3 com bateria%0A\n     \n@@ -3012,32 +3012,32 @@\n f.__carregador:%0A\n+\n             usad\n@@ -3251,47 +3251,8 @@\n rn%0A%0A\n-        # Uso com bateria + carregador%0A\n     \n@@ -3469,40 +3469,8 @@\n rn%0A%0A\n-        # Uso s%C3%B3 com carregador%0A\n     \n@@ -3929,32 +3929,33 @@\n ()%0A        elif \n+ \n cmd == %22turn_off\n@@ -4378,17 +4378,16 @@\n lido%22)%0A%0A\n-%0A\n if __nam\n@@ -4405,16 +4405,16 @@\n ain__%22:%0A\n+\n     main\n@@ -4415,9 +4415,8 @@\n   main()\n-%0A\n",
            "lines": "160"
        },
        {
            "label": "2025-10-26_23-10-06",
            "content": "@@ -2959,32 +2959,61 @@\n         return%0A%0A\n+        # Uso s%C3%B3 com bateria%0A\n         if self.\n@@ -3041,32 +3041,32 @@\n f.__carregador:%0A\n-\n             usad\n@@ -3268,32 +3268,71 @@\n         return%0A%0A\n+        # Uso com bateria + carregador%0A\n         if self.\n@@ -3525,32 +3525,64 @@\n         return%0A%0A\n+        # Uso s%C3%B3 com carregador%0A\n         if not s\n@@ -4037,17 +4037,16 @@\n    elif \n- \n cmd == %22\n@@ -4477,16 +4477,17 @@\n lido%22)%0A%0A\n+%0A\n if __nam\n@@ -4505,16 +4505,16 @@\n ain__%22:%0A\n-\n     main\n@@ -4511,12 +4511,13 @@\n :%0A    main()\n+%0A\n",
            "lines": "164"
        },
        {
            "label": "2025-10-26_23-10-17",
            "content": "@@ -2971,37 +2971,8 @@\n rn%0A%0A\n-        # Uso s%C3%B3 com bateria%0A\n     \n@@ -3012,32 +3012,32 @@\n f.__carregador:%0A\n+\n             usad\n@@ -3251,47 +3251,8 @@\n rn%0A%0A\n-        # Uso com bateria + carregador%0A\n     \n@@ -3469,40 +3469,8 @@\n rn%0A%0A\n-        # Uso s%C3%B3 com carregador%0A\n     \n@@ -3929,32 +3929,33 @@\n ()%0A        elif \n+ \n cmd == %22turn_off\n@@ -4378,17 +4378,16 @@\n lido%22)%0A%0A\n-%0A\n if __nam\n@@ -4405,16 +4405,16 @@\n ain__%22:%0A\n+\n     main\n@@ -4415,9 +4415,8 @@\n   main()\n-%0A\n",
            "lines": "160"
        },
        {
            "label": "2025-10-26_23-13-00",
            "content": "class Bateria:\n    def __init__(self, capacidade: int):\n        self.__capacidade = capacidade\n        self.__carga = capacidade\n\n    def getCapacidade(self):\n        return self.__capacidade\n\n    def getCarga(self):\n        return self.__carga\n\n    def setCarga(self, valor: int):\n        self.__carga = max(0, min(valor, self.__capacidade))\n\n    def usar(self, tempo: int):\n        if tempo > self.__carga:\n            usado = self.__carga\n            self.__carga = 0\n            return usado, True\n        else:\n            self.__carga -= tempo\n            return tempo, False\n\n    def carregar(self, quantidade: int):\n        self.setCarga(self.__carga + quantidade)\n\n    def __str__(self):\n        return f\"{self.__carga}/{self.__capacidade}\"\n\n\nclass Carregador:\n    def __init__(self, potencia: int):\n        self.__potencia = potencia\n\n    def getPotencia(self):\n        return self.__potencia\n\n    def __str__(self):\n        return f\"{self.__potencia}W\"\n\n\nclass Notebook:\n    def __init__(self):\n        self.__ligado = False\n        self.__bateria: Bateria | None = None\n        self.__carregador: Carregador | None = None\n        self.__tempo_uso = 0\n\n    def show(self):\n        msg = \"Notebook: \"\n        if not self.__ligado:\n            msg += \"desligado\"\n        else:\n            msg += f\"ligado por {self.__tempo_uso} min\"\n\n        if self.__bateria and self.__carregador:\n            msg += f\", Carregador {self.__carregador}, Bateria {self.__bateria}\"\n        elif self.__bateria:\n            msg += f\", Bateria {self.__bateria}\"\n        elif self.__carregador:\n            msg += f\", Carregador {self.__carregador}\"\n\n        print(msg)\n\n    def turn_on(self):\n        if (self.__bateria and self.__bateria.getCarga() > 0) or self.__carregador:\n            self.__ligado = True\n        else:\n            print(\"fail: n\u00e3o foi poss\u00edvel ligar\")\n\n    def turn_off(self):\n        self.__ligado = False\n\n    def set_battery(self, capacidade: int):\n        if self.__bateria:\n            print(\"fail: bateria j\u00e1 conectada\")\n            return\n        self.__bateria = Bateria(capacidade)\n\n    def rm_battery(self):\n        if not self.__bateria:\n            print(\"fail: Sem bateria\")\n            return\n        print(f\"Removido {self.__bateria}\")\n        self.__bateria = None\n        if not self.__carregador:\n            self.__ligado = False\n\n    def set_charger(self, potencia: int):\n        if self.__carregador:\n            print(\"fail: carregador j\u00e1 conectado\")\n            return\n        self.__carregador = Carregador(potencia)\n\n    def rm_charger(self):\n        if not self.__carregador:\n            print(\"fail: Sem carregador\")\n            return\n        print(f\"Removido {self.__carregador}\")\n        self.__carregador = None\n        if not (self.__bateria and self.__bateria.getCarga() > 0):\n            self.__ligado = False\n\n    def use(self, tempo: int):\n        if not self.__ligado:\n            print(\"fail: desligado\")\n            return\n\n        # Uso s\u00f3 com bateria\n        if self.__bateria and not self.__carregador:\n            usado, descarregou = self.__bateria.usar(tempo)\n            self.__tempo_uso += usado\n            if descarregou:\n                print(\"fail: descarregou\")\n                self.__ligado = False\n            return\n\n        # Uso com bateria + carregador\n        if self.__bateria and self.__carregador:\n            self.__tempo_uso += tempo\n            ganho = self.__carregador.getPotencia() * tempo - tempo\n            self.__bateria.carregar(ganho)\n            return\n\n        # Uso s\u00f3 com carregador\n        if not self.__bateria and self.__carregador:\n            self.__tempo_uso += tempo\n            return\n\n\ndef main():\n    nb = Notebook()\n    while True:\n        line = input().strip()\n        if not line:\n            continue\n        print(f\"${line}\")\n        args = line.split()\n        cmd = args[0]\n\n        if cmd == \"end\":\n            break\n        elif cmd == \"show\":\n            nb.show()\n        elif cmd == \"turn_on\":\n            nb.turn_on()\n        elif cmd == \"turn_off\":\n            nb.turn_off()\n        elif cmd == \"set_battery\":\n            nb.set_battery(int(args[1]))\n        elif cmd == \"rm_battery\":\n            nb.rm_battery()\n        elif cmd == \"set_charger\":\n            nb.set_charger(int(args[1]))\n        elif cmd == \"rm_charger\":\n            nb.rm_charger()\n        elif cmd == \"use\":\n            nb.use(int(args[1]))\n        else:\n            print(\"fail: comando inv\u00e1lido\")\n\n\nif __name__ == \"__main__\":\n    main()\n",
            "lines": "164"
        }
    ]
}