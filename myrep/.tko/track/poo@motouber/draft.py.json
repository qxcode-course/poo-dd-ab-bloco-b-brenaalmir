{
    "patches": [
        {
            "label": "2025-10-26_00-17-46",
            "content": "@@ -402,2704 +402,4 @@\n %22%0A%0A%0A\n-class Moto:%0A    def __init__(self):%0A        self.__custo = 0 %0A        self.__motorista: Pessoa %7C None = None%0A        self.__passageiro: Pessoa %7C None = None%0A%0A    def setMotorista(self, nome: str, dinheiro: int):%0A        self.__motorista = Pessoa(nome, dinheiro)%0A%0A    def setPassageiro(self, nome: str, dinheiro: int):%0A        if self.__motorista is None:%0A            print(%22fail: no driver in the motorcycle%22)%0A            return%0A        self.__passageiro = Pessoa(nome, dinheiro)%0A%0A    def dirigir(self, km: int):%0A        if self.__motorista is None or self.__passageiro is None:%0A            return%0A        self.__custo += km%0A%0A    def deixarPassageiro(self):%0A        if self.__passageiro is None:%0A            print(%22fail: no passenger to leave%22)%0A            return%0A        custo = self.__custo%0A        dinheiro_pass = self.__passageiro.getDinheiro()%0A        dinheiro_motorista = self.__motorista.getDinheiro()%0A%0A        if dinheiro_pass %3C custo:%0A            print(%22fail: Passenger does not have enough money%22)%0A            self.__motorista.setDinheiro(dinheiro_motorista + custo)%0A            self.__passageiro.setDinheiro(0)%0A            print(f%22%7Bself.__passageiro.getNome()%7D:0 left%22)%0A%0A        else:%0A            self.__passageiro.setDinheiro(dinheiro_pass - custo)%0A            self.__motorista.setDinheiro(dinheiro_motorista + custo)%0A            print(f%22%7Bself.__passageiro.getNome()%7D:%7Bself.__passageiro.getDinheiro()%7D left%22)%0A%0A        self.__custo = 0%0A        self.__passageiro = None%0A%0A    def __str__(self):%0A        motorista = str(self.__motorista) if self.__motorista else %22None%22%0A        passageiro = str(self.__passageiro) if self.__passageiro else %22None%22%0A        return f%22Cost: %7Bself.__custo%7D, Driver: %7Bmotorista%7D, Passenger: %7Bpassageiro%7D%22%0A%0A    %0A    def main():%0A        moto = Moto()%0A        while True:%0A            line = input().strip()%0A            if not line:%0A                continue%0A            print(f%22$%7Bline%7D%22)%0A            args = line.split()%0A%0A            if args%5B0%5D == %22end%22:%0A                break%0A            %0A            elif args%5B0%5D == %22show%22:%0A                print(moto)%0A%0A            elif args%5B0%5D == %22setDriver%22:%0A                nome = args%5B1%5D%0A                dinheiro = int(args%5B2%5D)%0A                moto.setMotorista(nome, dinheiro)%0A%0A            elif args%5B0%5D == %22setPass%22:%0A                nome = args%5B1%5D%0A                dinheiro = int(args%5B2%5D)%0A                moto.setPassageiro(nome, dinheiro)%0A%0A            elif args%5B0%5D == %22drive%22:%0A                km = int(args%5B1%5D)%0A                moto.dirigir(km)%0A%0A            elif args%5B0%5D == %22leavePass%22:%0A                moto.deixarPassageiro()%0A%0A            else:%0A                print(%22fail: invalid command%22)%0A%0Aif __name__ == %22__main__%22:%0A    main()\n",
            "lines": "18"
        },
        {
            "label": "2025-10-26_13-52-47",
            "content": "@@ -2144,16 +2144,20 @@\n %22%0A%0A    %0A\n+    \n def main\n@@ -2160,24 +2160,28 @@\n main():%0A    \n+   \n+ \n moto = Moto(\n@@ -2186,16 +2186,20 @@\n o()%0A    \n+   \n+ \n while Tr\n@@ -2210,16 +2210,20 @@\n         \n+  \n+  \n line = i\n@@ -2245,16 +2245,20 @@\n         \n+    \n if not l\n@@ -2274,16 +2274,20 @@\n         \n+ \n+   \n continue\n@@ -2287,32 +2287,36 @@\n ontinue%0A        \n+   \n+ \n print(f%22$%7Bline%7D%22\n@@ -2317,16 +2317,20 @@\n line%7D%22)%0A\n+    \n         \n@@ -2358,16 +2358,20 @@\n         \n+  \n+  \n if args%5B\n@@ -2395,16 +2395,20 @@\n         \n+    \n break%0A  \n@@ -2418,32 +2418,36 @@\n        %0A        \n+ \n+   \n elif args%5B0%5D == \n@@ -2454,16 +2454,20 @@\n %22show%22:%0A\n+    \n         \n@@ -2483,32 +2483,36 @@\n (moto)%0A%0A        \n+    \n elif args%5B0%5D == \n@@ -2528,32 +2528,36 @@\n r%22:%0A            \n+  \n+  \n nome = args%5B1%5D%0A \n@@ -2547,32 +2547,36 @@\n  nome = args%5B1%5D%0A\n+    \n             dinh\n@@ -2599,32 +2599,36 @@\n 2%5D)%0A            \n+ \n+   \n moto.setMotorist\n@@ -2638,32 +2638,36 @@\n ome, dinheiro)%0A%0A\n+    \n         elif arg\n@@ -2689,32 +2689,36 @@\n s%22:%0A            \n+    \n nome = args%5B1%5D%0A \n@@ -2720,32 +2720,36 @@\n %5B1%5D%0A            \n+   \n+ \n dinheiro = int(a\n@@ -2748,32 +2748,36 @@\n  = int(args%5B2%5D)%0A\n+    \n             moto\n@@ -2808,32 +2808,36 @@\n heiro)%0A%0A        \n+ \n+   \n elif args%5B0%5D == \n@@ -2845,16 +2845,20 @@\n drive%22:%0A\n+    \n         \n@@ -2887,24 +2887,28 @@\n             \n+    \n moto.dirigir\n@@ -2913,32 +2913,36 @@\n ir(km)%0A%0A        \n+   \n+ \n elif args%5B0%5D == \n@@ -2962,24 +2962,28 @@\n             \n+    \n moto.deixarP\n@@ -2995,38 +2995,46 @@\n eiro()%0A%0A        \n+  \n+  \n else:%0A\n+    \n             prin\n",
            "lines": "103"
        },
        {
            "label": "2025-10-26_13-55-14",
            "content": "class Pessoa:\n    def __init__(self, nome: str, dinheiro: int):\n        self.__nome = nome\n        self.__dinheiro = dinheiro\n\n    def getNome(self) -> int:\n        return self.__nome\n\n    def getDinheiro(self) -> int:\n        return self.__dinheiro\n\n    def setDinheiro(self, valor: int):\n        self.__dinheiro = valor\n\n    def __str__(self) -> str:\n        return f\"{self.__nome}:{self.__dinheiro}\"\n\n\nclass Moto:\n    def __init__(self):\n        self.__custo = 0 \n        self.__motorista: Pessoa | None = None\n        self.__passageiro: Pessoa | None = None\n\n    def setMotorista(self, nome: str, dinheiro: int):\n        self.__motorista = Pessoa(nome, dinheiro)\n\n    def setPassageiro(self, nome: str, dinheiro: int):\n        if self.__motorista is None:\n            print(\"fail: no driver in the motorcycle\")\n            return\n        self.__passageiro = Pessoa(nome, dinheiro)\n\n    def dirigir(self, km: int):\n        if self.__motorista is None or self.__passageiro is None:\n            return\n        self.__custo += km\n\n    def deixarPassageiro(self):\n        if self.__passageiro is None:\n            print(\"fail: no passenger to leave\")\n            return\n        custo = self.__custo\n        dinheiro_pass = self.__passageiro.getDinheiro()\n        dinheiro_motorista = self.__motorista.getDinheiro()\n\n        if dinheiro_pass < custo:\n            print(\"fail: Passenger does not have enough money\")\n            self.__motorista.setDinheiro(dinheiro_motorista + custo)\n            self.__passageiro.setDinheiro(0)\n            print(f\"{self.__passageiro.getNome()}:0 left\")\n\n        else:\n            self.__passageiro.setDinheiro(dinheiro_pass - custo)\n            self.__motorista.setDinheiro(dinheiro_motorista + custo)\n            print(f\"{self.__passageiro.getNome()}:{self.__passageiro.getDinheiro()} left\")\n\n        self.__custo = 0\n        self.__passageiro = None\n\n    def __str__(self):\n        motorista = str(self.__motorista) if self.__motorista else \"None\"\n        passageiro = str(self.__passageiro) if self.__passageiro else \"None\"\n        return f\"Cost: {self.__custo}, Driver: {motorista}, Passenger: {passageiro}\"\n\n    \ndef main():\n    moto = Moto()\n    while True:\n        line = input().strip()\n        if not line:\n            continue\n        print(f\"${line}\")\n        args = line.split()\n\n        if args[0] == \"end\":\n            break\n            \n        elif args[0] == \"show\":\n            print(moto)\n\n        elif args[0] == \"setDriver\":\n            nome = args[1]\n            dinheiro = int(args[2])\n            moto.setMotorista(nome, dinheiro)\n\n        elif args[0] == \"setPass\":\n            nome = args[1]\n            dinheiro = int(args[2])\n            moto.setPassageiro(nome, dinheiro)\n\n        elif args[0] == \"drive\":\n            km = int(args[1])\n            moto.dirigir(km)\n\n        elif args[0] == \"leavePass\":\n            moto.deixarPassageiro()\n\n        else:\n            print(\"fail: invalid command\")\n\nif __name__ == \"__main__\":\n    main()",
            "lines": "103"
        }
    ]
}